@page "/RegistroCliente"
@page "/RegistroCliente/{ClienteId:int}"

@inject ClienteBLL clienteBLL

<EditForm model = "Clientes" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class ="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3>Registro de Clientes.</h3>
            </div>
            <div class=card-body>

                <div class= "col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4">
                    <label>ID Cliente:</label>
                    <div class="input-group mb-3">
                        <InputNumber @bind-Value ="cliente.ClienteId" class="form-control" aria-describedby="BotonBuscar"/>
                        <button @onclick="Buscar" class="btn btn-outline-primary" type="button" id="BotonBuscar"><i class ="oi oi-magnifying-glass"/></button>
                    </div>
                </div>
                
                <div class="mb-3">
                    <label class="form-label" for="Nombres">Nombres:</label>
                    <InputText @bind-Value="cliente.Nombres" class="form-control" />
                    <ValidationMessage For="@(() => cliente.Nombres)" />
                </div>

                <div class="mb-3">
                    <label class="form-label" for="Telefono">Telefono:</label>
                    <InputText @bind-Value="cliente.Telefono" class="form-control"/>
                    <ValidationMessage For="@(() => cliente.Telefono)" />
                </div>

                <div class="mb-3">
                    <label class="form-label" for="Celular">Celular:</label>
                    <InputText @bind-Value="cliente.Celular" class="form-control"/>
                    <ValidationMessage For="@(() => cliente.Celular)" />
                </div>

                <div class="mb-3">
                    <label class="form-label" for="RNC">RNC:</label>
                    <InputText @bind-Value="cliente.RNC" class="form-control"/>
                    <ValidationMessage For="@(() => cliente.RNC)" />
                </div>

                <div class="mb-3">
                    <label class="form-label" for="Email">Email:</label>
                    <InputText @bind-Value="cliente.Email" class="form-control"/>
                    <ValidationMessage For="@(() => cliente.Email)" />
                </div>

                <div class="mb-3">
                    <label class="form-label" for="Direccion">Direccion:</label>
                    <InputText @bind-Value="cliente.Direccion" class="form-control"/>
                    <ValidationMessage For="@(() => cliente.Direccion)" />
                </div>

            </div>
            <div class="card-footer d-flex justify-content-center">
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-primary" @onclick="Nuevo">Nuevo <i class="oi oi-file"/></button>
                    <button type="submit" class="btn btn-outline-success">Guardar <i class="oi oi-document"/></button>
                    <button type="button" class="btn btn-outline-danger"@onclick="Eliminar">Eliminar <i class="oi oi-trash"/></button>
                </div>
            </div>
        </div>
    </div>


</EditForm>
<label>@mensaje</label>

@code
{
    [Parameter]

    public int ClienteId { get; set; }

    public Clientes cliente { get; set; } = new Clientes();

    public string mensaje = string.Empty;

    protected override void OnInitialized()
    {
        if(ClienteId > 0)
        {
            cliente.ClienteId = ClienteId;
            Buscar();
        }
    }

    public void Buscar()
    {
        var clienteEncontrado = clienteBLL.Buscar(cliente.ClienteId);

        if(clienteEncontrado != null)
        {
            this.cliente = clienteEncontrado;
        }
        else
        {
            mensaje = "no se ha encontrado ese cliente";
        }
    }

    public void Guardar()
    {
        if(Validar())
        {
             
            if(clienteBLL.Guardar(this.cliente))
            {
                mensaje= "Se ha guardado con exito";
                Nuevo();
            }
            else
            {
                mensaje = "Error al momento de guardar, intentelo de nuevo";
            }
        }
        else
        {
            mensaje = "Por favor rellene los campos";
        }
    }

    public bool Validar()
    {
        return cliente.Nombres != null && cliente.Telefono != null && cliente.Celular != null &&
        cliente.RNC != null && cliente.Direccion != null && cliente.Email != null;
    }

    public void Nuevo()
    {
        this.cliente = new Clientes();
        mensaje = string.Empty;
    }

    public void Eliminar()
    {
        if(Validar()){

            if(clienteBLL.Eliminar(this.cliente))
            {
                mensaje="Se ha eliminado correctamente";
                Nuevo();
            }
            else
            {
                mensaje="Error al eliminar, intentelo de nuevo";
            }
            
        }else{
            mensaje = "No hay nada por eliminar";
        }
    }
}

